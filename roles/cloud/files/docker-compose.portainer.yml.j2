version: '3.2'

services:
  agent:
    image: portainer/agent:2.20.2
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:2.20.2
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    restart: unless-stopped
    volumes:
      - portainer_data:/data
    environment:
      - NODE_ID=&lbrace;&lbrace;.Node.ID&rbrace;&rbrace;
    networks:
      - agent_network
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M
      placement:
        constraints: [node.role == manager]
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.portainer.entrypoints=http, https
        - traefik.http.routers.portainer.middlewares=cors-headers@file
        - traefik.http.routers.portainer.rule=Host(`{{ portainer_domain }}`)
        - traefik.http.routers.portainer.tls=true
        - traefik.http.routers.portainer.tls.certresolver={{ traefik_tls_certresolver }}
        - traefik.http.services.portainer-service.loadbalancer.server.port=9000

networks:
  agent_network:
    driver: overlay
    attachable: true

  # Use the previously created public network "traefik-public", shared with other
  # services that need to be publicly available via this Traefik
  traefik-public:
    external: true

volumes:
  portainer_data:
